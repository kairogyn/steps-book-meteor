{
  "name": "rolling_timeout_exec",
  "version": "0.0.1",
  "description": "Wrapper around child_process.exec that provides a rolling timeout based on stdout/stderr activity.",
  "main": "./index.js",
  "dependencies": {},
  "devDependencies": {
    "tap": "~0.4.8"
  },
  "scripts": {
    "test": "tap ./test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/alanning/rolling_timeout_exec.git"
  },
  "files": [
    "README.md",
    "index.js",
    "History.md"
  ],
  "keywords": [
    "rolling timeout",
    "timeout",
    "child process",
    "exec"
  ],
  "bugs": {
    "url": "https://github.com/alanning/rolling_timeout_exec/issues"
  },
  "author": {
    "name": "Adrian Lanning"
  },
  "license": "MIT",
  "readme": "rolling_timeout_exec\n====================\n\nWrapper around `child_process.exec` that provides a rolling timeout based on stdout/stderr activity.\n\n### Goal\n\nThe goal of this package is to provide a practical way to tell the difference between a slow child process and a hung child process.\n\n\n### Changes\n\nThis package adds a new `rollingTimeout` option to `exec`.\n\n`rollingTimeout` expects a numeric value representing the number of milliseconds to wait for activity from child processes before killing the child.\n\nActivity means any output to `stdout` or `stderr`.\n\nIf a rollingTimeout is triggered, the child process is killed in the same way that `timeout` does, using `options.killSignal` and defaulting to `SIGTERM`.  A `rolling-timeout` event is also emitted on the child process.\n\n\n### Usage\n\n```sh\n$ npm install rolling_timeout_exec\n```\n\n```js\nvar exec = require('rolling_timeout_exec').exec,\n    child,\n    command,\n    options,\n    timeout = false;\n\ncommand = 'git clone --progress http://some-slow-server.example.com/repo';\noptions = { rollingTimeout: 5000 };\n\nchild = exec(command, options, function (err, stdout, stderr) {\n  if (err) {\n    if (timeout) {\n      console.error('timed out');\n    }\n    console.error(err.message, err.code);\n    console.error(stdout);\n    console.error(stderr);\n  } else {\n    console.log('git clone completed!');\n  }\n});\n\nchild.on('rolling-timeout', function () {\n  timeout = true;\n})\n```\n\n### Test\n\nSteps to run test suite:\n\n```sh\n$ cd ~/tmp\n$ git clone https://github.com/alanning/rolling_timeout_exec.git\n$ cd rolling_timeout_exec\n$ npm install\n$ npm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "rolling_timeout_exec@0.0.1",
  "dist": {
    "shasum": "3a4a3bde04cc10a3016e51731d57a6e215513341",
    "tarball": "http://registry.npmjs.org/rolling_timeout_exec/-/rolling_timeout_exec-0.0.1.tgz"
  },
  "_from": "rolling_timeout_exec@>=0.0.1",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "alanning",
    "email": "alanning@gmail.com"
  },
  "maintainers": [
    {
      "name": "alanning",
      "email": "alanning@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "3a4a3bde04cc10a3016e51731d57a6e215513341",
  "_resolved": "https://registry.npmjs.org/rolling_timeout_exec/-/rolling_timeout_exec-0.0.1.tgz"
}
